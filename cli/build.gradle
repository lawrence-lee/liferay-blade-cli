import de.undercouch.gradle.tasks.download.Download

buildscript {
	dependencies {
		classpath group: "biz.aQute.bnd", name: "biz.aQute.bnd.gradle", version: "3.5.0"
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins.change.log.builder", version: "1.1.0"
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins.source.formatter", version: "latest.release"
		classpath group: "de.undercouch", name: "gradle-download-task", version: "3.3.0"
	}

	repositories {
		maven {
			url "https://repository-cdn.liferay.com/nexus/content/groups/public"
		}
	}
}

apply plugin: "biz.aQute.bnd.builder"
apply plugin: "com.liferay.change.log.builder"
apply plugin: "com.liferay.source.formatter"
apply plugin: "java"
apply plugin: "maven-publish"

task createDepsZip(type:Zip)
task createWrapperZip(type:Zip)

buildChangeLog {
	changeLogHeader= "BLADE Version ${project.version}"
	ticketIdPrefixes = ["BLADE", "IDE", "LPS"]
}

checkSourceFormatting {
	maxLineLength = 120
}

clean.doFirst {
	delete "${projectDir}/deps.zip", "${projectDir}/wrapper.zip"
}

createDepsZip {
	from "${rootProject.projectDir}/libs/"
	archiveName = "deps.zip"
	destinationDir = new File("${projectDir}")
	include "com.liferay.blade.gradle.*.jar"
}

createWrapperZip {
	from "${rootProject.projectDir}"
	archiveName = "wrapper.zip"
	destinationDir = new File("${projectDir}")
	include "gradle/**"
	include "gradlew*"
}

dependencies {
	compile group: "biz.aQute.bnd", name: "aQute.libg", version: "3.5.0"
	compile group: "biz.aQute.bnd", name: "biz.aQute.bndlib", version: "3.5.0"
	compile group: "com.liferay", name: "com.liferay.gogo.shell.client", version: "1.0.0"
	compile group: "com.liferay", name: "com.liferay.project.templates", version: "4.1.7"
	compile group: "org.apache.commons", name: "commons-lang3", version: "3.4"
	compile group: "org.apache.maven", name: "maven-aether-provider", version: "3.3.9"
	compile group: "org.apache.maven", name: "maven-settings", version: "3.3.9"
	compile group: "org.apache.maven", name: "maven-settings-builder", version: "3.3.9"
	compile group: "org.eclipse.aether", name: "aether-api", version: "1.0.2.v20150114"
	compile group: "org.eclipse.aether", name: "aether-connector-basic", version: "1.0.2.v20150114"
	compile group: "org.eclipse.aether", name: "aether-impl", version: "1.0.2.v20150114"
	compile group: "org.eclipse.aether", name: "aether-spi", version: "1.0.2.v20150114"
	compile group: "org.eclipse.aether", name: "aether-transport-classpath", version: "1.0.2.v20150114"
	compile group: "org.eclipse.aether", name: "aether-transport-file", version: "1.0.2.v20150114"
	compile group: "org.eclipse.aether", name: "aether-transport-http", version: "1.0.2.v20150114"
	compile group: "org.eclipse.aether", name: "aether-transport-wagon", version: "1.0.2.v20150114"
	compile group: "org.eclipse.aether", name: "aether-util", version: "1.0.2.v20150114"
	compile group: "org.fusesource.jansi", name: "jansi", version: "1.17.1"
	compile group: "org.gradle", name: "gradle-base-services-groovy", version: "3.0"
	compile group: "org.gradle", name: "gradle-core", version: "3.0"
	compile group: "org.gradle", name: "gradle-tooling-api", version: "3.0"
	compile name: "com.liferay.blade.gradle.model"
	compile name: "com.liferay.blade.gradle.plugin"
	compile name: "gradle-native-3.0"
	compile name: "org.objectweb.asm-6.0.0"
	compile name: "org.objectweb.asm.analysis-6.0.0"
	compile name: "org.objectweb.asm.commons-6.0.0"
	compile name: "org.objectweb.asm.tree-6.0.0"
	compile name: "org.objectweb.asm.util-6.0.0"

	compileOnly group: "org.osgi", name: "osgi.core", version: "6.0.0"

	testCompile gradleTestKit()
	testCompile group: "com.googlecode.java-diff-utils", name: "diffutils", version: "1.3.0"
	testCompile group: "junit", name: "junit", version: "4.12"
	testCompile group: "net.diibadaaba.zipdiff", name: "zipdiff", version: "1.0"
	testCompile group: "org.easymock", name: "easymock", version: "3.5.1"
	testCompile group: "org.osgi", name: "osgi.core", version: "6.0.0"
	testCompile group: "org.powermock", name: "powermock-api-easymock", version: "1.7.3"
	testCompile group: "org.powermock", name: "powermock-classloading-xstream", version: "1.7.3"
	testCompile group: "org.powermock", name: "powermock-module-junit4", version: "1.7.3"
	testCompile group: "org.powermock", name: "powermock-module-junit4-rule", version: "1.7.3"
	testCompile group: "org.zeroturnaround", name: "zt-process-killer", version: "1.8"
}

formatSource {
	maxLineLength = 120
}

jar {
	archiveName = 'blade.jar'
	from createDepsZip, createWrapperZip
}

repositories {
	maven {
		url "https://repo.gradle.org/gradle/libs-releases"
	}
}

publishing {
	publications {
		bladeJar(MavenPublication) {
			groupId = "com.liferay.blade"
			artifactId = "com.liferay.blade.cli"

			pom.withXml {
				Node pom = asNode()
				pom.remove(pom.get('dependencies'))
			}

			from components.java
		}
	}
}

sourceSets {
	zips {
		resources {
			srcDir "${projectDir}"
			include "deps.zip"
			include "wrapper.zip"
		}
	}
	test {
		runtimeClasspath += sourceSets.zips.output
	}
}

task downloadPortal(type: Download) {
	src 'https://releases-cdn.liferay.com/portal/7.0.3-ga4/liferay-ce-portal-tomcat-7.0-ga4-20170613175008905.zip'
	dest new File("${System.getProperty('user.home')}/.liferay/bundles", 'liferay-ce-portal-tomcat-7.0-ga4-20170613175008905.zip')
	onlyIfNewer true
}

task testExecutableJar(dependsOn: jar) {
	doLast {
		javaexec {
			args = [jar.archivePath, "create", "-l"]
			main = "-jar"
		}
	}
}

task testVersionCommand(dependsOn: jar) {
	doLast {
		javaexec {
			args = [jar.archivePath, "version"]
			main = "-jar"
		}
	}
}

check.dependsOn testExecutableJar, testVersionCommand

task unzipPortal(dependsOn: downloadPortal, type: Copy) {
	from zipTree(downloadPortal.dest)
	into buildDir
}

test {
	dependsOn createDepsZip, createWrapperZip, unzipPortal

	systemProperty 'buildDir', "${buildDir}"
	systemProperty 'liferay.home', "${buildDir}/liferay-ce-portal-7.0-ga4"

	project(':extensions:sample-command').afterEvaluate { project ->
		dependsOn project.jar
		systemProperty 'sampleCommandJarFile', project.jar.archivePath
	}

	project(':extensions:sample-profile').afterEvaluate { project ->
		dependsOn project.jar
		systemProperty 'sampleProfileJarFile', project.jar.archivePath
	}

	project(':extensions:sample-template').afterEvaluate { project ->
		dependsOn project.jar
		systemProperty 'sampleTemplateJarFile', project.jar.archivePath
	}

	int availableProcessors = Runtime.runtime.availableProcessors()

	int forks = 1

	if (!debug) {
		if (availableProcessors > 4) {

			forks = availableProcessors - 2
		}
		else if (availableProcessors > 2) {

			forks = availableProcessors - 1
		}
	}

	maxParallelForks = forks
}

version = "3.1.2"